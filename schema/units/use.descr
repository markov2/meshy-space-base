=short

<p>Refer to knowledge inside another Unit.</p>

=schema

==xml
<element name="use" type="ms:Use" />

<complexType name="Use">
  <sequence>
    <element name="include" type="string" minOccurs="0" maxOccurs="unbounded">
    <element name="exclude" type="string" minOccurs="0" maxOccurs="unbounded">
  </sequence>
  <attribute name="from" type="ms:UnitFragment" use="required"  />
  <attribute name="all"  type="boolean" default="true"  />
  <attributeGroup ref="ms:selector" />
</complexType>
==end

=description

<p>Take definitions from the specific fragment in an other Unit. In your
context, some definitions are taken by default: from the system, Collection,
Namespace, Payload, server and user Identity.  Use this construct to
import definitions from additional libraries.</p>

=attribute from

<p>Refers to a fragment with definition in a different Unit.  When the
Unit cannot be read, it will not result in an error.</p>

=attribute all

<p>Determines whether to take <i>all</i> definitions from the fragment
which is referred to by default.</p>

=element include

<p>When not <i>all</i>, then specify explicitly which reusables MAY
be used here.  Only those will be passed to Units which use this
reusable.</p>

=element exclude

<p>When <i>all</i> definitions are imported by default, some MAY be
excluded explicitly.  For instance, because of name conflicts are
need for a clean style.</p>

