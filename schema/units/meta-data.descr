=short

<p>Elements which give facts about the payload, which is defined by the
unit, independent of how the payload is included.</p>

=schema

==xml
<group name="meta-data">
  <sequence>
    <element name="type"     type="ms:Constant" />
    <element name="name"     type="token"         minOccurs="0" />
    <element name="language" type="ms:Constants"  minOccurs="0" />
    <element name="charset"  type="token"         minOccurs="0" />
  </sequence>
</group>
==end

=element type

<p>The type of data which is contained in the payload of this unit.
This is equivalent to the type of attachments in emails.  The data itself
may come in a serialization (<code>format</code>) which can be converted
to the indicated type.</p>

=element name

<p>A unit may have a name which is shown to users.  The chosen unit-ids
may not be the nicest way to present the Unit to a person.</p>

<p>The name defaults to the percent-decoded version of Unit's
<code>id</code>.</p>

<p><strong>Be warned</strong> that the name is (like everything else)
in the UTF8 charset.  See the discussion below about the problem with
using filenames here.</p>

=element language

<p>The languages used in the payload, when it contains text.
This fact MAY be used by search filters. Values are constants in
one of the <SCHEMA>ms:Language/</SCHEMA> sets.</p>

<p>The concept of language in text is complex: more details about
contained languages may be included in other ways.</p>

=element charset

<p><code>Charset</code> is a common abbreviation of <i>character
set</i>.  Which charset is used by the payload data is only useful
for applications which process that data.  Binary data formats,
like images, will not contain a charset specification.</p>

<p>The content of this field is defined by [% rfc('2978') %].
See the page with all
<a href="https://www.iana.org/assignments/character-sets/character-sets.xhtml">character-sets at IANA</a>.</p>

=discuss Using filenames as name

<p>When you want to use a filename as <code>name</code> (which makes a
good case), you will need to include an encoded version of the filename
because those are often <code>UTF-16</code> (NTFS) or "bytes" (UNIX/Linux).</p>

<p>Also, the use of hidden files (leading dot on UNIX/Linux) and hidden
meta-data directories (<code>__MACOSX</code> on Apple) will complicate
the set-up.  It hurts even more when file-systems are considered
case-insensitive, may contain control characters, and use white-spaces.
Some operating systems use UTF8 for <code>รถ</code>, other use <code>o +
"</code>, which are not equivalent under simple comparison.</p>

<p>This Meshy Space Base does not solve any of these problems.  Extensions,
like the Meshy Space <i>Concept</i> may offer a better solution.  They start
with using the filename's precise byte-sequence percent-encoded as unit
<code>id</code>, and a readable UTF-8 version of it as <code>name</code>.
Search on <code>name</code> can be made case-insensitive.</p>
