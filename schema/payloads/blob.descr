=short

<p>The data is included in this <SCHEMA>b:unit</SCHEMA> object itself.</p>

=schema

==xml
<element name="blob" type="b:Bytes" />
==end

=description

<p>Elements of this type contain data which MAY be encapsulated to be
able to fit in the message. The packaged data MAY be a structure, not
UTF8, contain characters which XML does not like, or pure binary.</p>

<p>Although the blob is a datas-source, it is not a complexType hence
cannot extend from <SCHEMA>b:data-source</SCHEMA>.</p>

=example Blob with Encoding

<p class="list">The <code>encoded</code> attribute is an abbreviation.
The following two are the same:</p>
<XML>
<b:blob b:encoded="ms:Encode/Base64">DATA</b:blob>

<b:encoded b:by="ms:Encode/Base64">
  <b:blob>DATA</b:blob>
</b:encoded>
</XML>

=example Blob using Compression

<p>The <code>compressed</code> attribute is an abbreviation.
It is nearly always encompanied by the <code>encoding</code> attribute,
because compression algorithms usually produce binary output.</p>

<p class="list">The following two are the same:</p>
<XML>
<b:blob
   b:compressed="ms:Compress/Gzip"
   b:encoded="ms:Encode/Base64">
    DATA
</b:blob>

<b:encoded b:by="ms:Encode/Base64">
  <b:compressed b:by="ms:Compress/Gzip">
    <b:blob>
      DATA
    </b:blob>
  </b:compressed>
</b:encoded>
</XML>
