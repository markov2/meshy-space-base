=short

<p>Add any kind of data directly inside a unit.</p>

=schema

==xml
<element name="inlined" type="ms:Inlined"
    substitutionGroup="ms:payload" />

<complexType name="Inlined">
  <complexContent>
    <extension base="ms:Payload">
      <sequence>
        <group name="ms:meta-data" />
        <element ref="ms:data" />
        <element ref="ms:signature" minOccurs="0" maxOccurs="unbounded" />
        <element ref="ms:encrypted" minOccurs="0" maxOccurs="unbounded" />
      </sequence>
    </extension>
  </complexContent>
</complexType>
==end

=description

<p>This element let you store the data of the unit inside the serialization
of the unit.  Especially when your data-set is modest, you may not want to
offer side-channel bulk data transport.  For instance, when you have a
few words of UTF-8 encoded text.</p>

<p>The data for <i>inlined</i> elements is foreign to the MSI, so probably
needs to be wrapped-up some way: it is encoded into a <code>blob</code>
of bytes.  Often, it is Base64 encoded.</p>

<p>Blobs can be used for anything: bulk parameter to calls, signatures,
passing encryption keys, images, etc.</p>

<h2>Efficient bulk use of blobs</h2>

<p>Any unit's data, and even units themselves, can be stored
together in a blob: a blob can, for instance, be a <code>zip</code> or
<code>tar.gz</code> archive, which offers addressable elements.  It is
far more efficient to combine many small blobs into a single dedicated
unit: compression, cache tuning, and data processing in general will
benefit.</p>

=group meta-data

=element data

=element signature

=element encrypted

